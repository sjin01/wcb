package com.wcb.model;

import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Page;
import com.mysql.jdbc.StringUtils;
import com.wcb.model.base.BaseAccount;

/**
 * Generated by JFinal.
 * 水表账户
 */
@SuppressWarnings("serial")
public class Account extends BaseAccount<Account> {
    public static final Account dao = new Account();

    /**
     * 分页
     */
    public Page<Account> paginate(int pageNumber, int pageSize, String searchStr) {
        String selectSql = " select t.*, concat(p.name, c.name, a.name) as areaName ";
        StringBuffer sb = new StringBuffer();
        sb.append(" from t_account t ");
        sb.append(" left join t_prov_city_area_street p on p.code = t.province ");
        sb.append(" left join t_prov_city_area_street c on c.code = t.city ");
        sb.append(" left join t_prov_city_area_street a on a.code = t.area ");
        if (!StringUtils.isNullOrEmpty(searchStr)) {
            sb.append(" where ( ");
            sb.append(" t.name like '%" + searchStr + "%' ");
            sb.append(" or t.card like '%" + searchStr + "%' ");
            sb.append(" or t.tel like '%" + searchStr + "%' ");
            sb.append(" ) ");
        }
        sb.append(" order by id desc ");
        return paginate(pageNumber, pageSize, selectSql, sb.toString());
    }

    /**
     * get Account
     */
    public Account getAccount(Integer id) {
        StringBuffer sb = new StringBuffer();
        sb.append(" select t.*, p.name as provinceName, c.name as cityName, a.name as areaName, s.name as streetName ");
        sb.append(" from t_account t ");
        sb.append(" left join t_prov_city_area_street p on p.code = t.province ");
        sb.append(" left join t_prov_city_area_street c on c.code = t.city ");
        sb.append(" left join t_prov_city_area_street a on a.code = t.area ");
        sb.append(" left join t_prov_city_area_street s on s.code = t.street ");
        sb.append(" where t.id = ? order by id desc ");
        return findFirst(sb.toString(), id);
    }

    /**
     * 批量删除 sql
     */
    public void deleteList(String ids) {
        if (!StringUtils.isNullOrEmpty(ids)) {
            StringBuilder sqlsb = new StringBuilder();
            sqlsb.append("delete from t_account where id in ( ");
            sqlsb.append(ids);
            sqlsb.append(" -1) ");
            Db.update(sqlsb.toString());
        }
    }

    /**
     * 地区展示 字段
     */
    private String provCityAreaStreetChoice;
    public String getProvCityAreaStreetChoice() {
        return provCityAreaStreetChoice;
    }
    public void setProvCityAreaStreetChoice(String provCityAreaStreetChoice) {
        this.provCityAreaStreetChoice = provCityAreaStreetChoice;
    }
}
